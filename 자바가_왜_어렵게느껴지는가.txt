서론 : 자바는 왜 어려운가?

1.  자바는 파이썬과 달리 거의 모든 기능이 명확하게 패키지 단위로 구성되어 있으며, 각 기능을 활용하기 위해 해당 패키지를 명시적으로 import 해야 하는 구조를 가지고 있다.

물론, 매우 기본적인 제어문(조건 + 반복), 배열, 기타 기능을 java.lang.* 패키지(Default로 import 않해도 적용되어 있음)안의 메서드 혹은 함수를 쓰면 된다.


하지만 그 외의 경우는 대부분 패키지 단위의 클래스를 가져와야 한다.

예를 들어, 파이썬에서는 input() 함수 하나로 간단히 사용자 입력을 받을 수 있지만, 자바에서는 Scanner 클래스를 사용해야 하며 java.util.Scanner를 명시적으로 import 해야 한다.
또한, 자바는 정적 타입 언어이며 문법이 상대적으로 엄격하고 구문이 길기 때문에, 초보자에게는 다소 비효율적이고 복잡하게 느껴질 수 있다.

이러한 구조는 사용자가 자주 사용하는 클래스나 메서드의 정확한 이름과 용도를 알고 있어야 하므로, 학습 초반에는 지식 중심적이고 암기 의존적인 학습 방식처럼 느껴질 수 있다.



하지만 일정 수준 이상 학습하고 나면, 자바의 구조적인 장점이 분명히 드러난다.
파이썬은 내장 함수와 문법의 간결함을 활용한 빠른 프로토타이핑에 적합하지만, 반대로 복잡한 구조를 직접 설계하거나 대규모 시스템을 구현할 때는 한계가 있다.

반면, 자바는 각 클래스와 패키지의 용도와 내부 구조를 이해하고 이를 적절히 활용한다면, 구현의 정밀도는 물론 메모리 사용 및 실행 시간에 대한 관리도 훨씬 용이하다.
즉, 구조적으로 체계화된 언어인 만큼 기초는 어렵지만, 중·고급 단계에서는 명확하고 확장성 있는 설계를 가능하게 해준다.